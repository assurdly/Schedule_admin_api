{"uid":"d87d718948fe68","name":"Create Product - Empty Name field","fullName":"Schedule - Admin Automated/Admin/Products/Create Product#Create Product - Empty Name field","historyId":"49a0061c121ab66f4aac1be9ecda094b:3e5f50c36efa326f440dc94b20ab9528","time":{"start":1747331900286,"stop":1747331900421,"duration":135},"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747331900418,"stop":1747331900418,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:40)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response returns valid message","time":{"start":1747331900419,"stop":1747331900419,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Name cannot be empty'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Name cannot be empty'\n   at Object.eval sandbox-script.js:2:40)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"823a5829908cb237","name":"TestScript","source":"823a5829908cb237.txt","type":"text/plain","size":252},{"uid":"ebc0c1944110e8f1","name":"Request Headers","source":"ebc0c1944110e8f1.json","type":"application/json","size":356},{"uid":"6a23d49e6a3e8cc4","name":"Request Body","source":"6a23d49e6a3e8cc4.txt","type":"text/plain","size":226},{"uid":"a859f51995c168a0","name":"Response Headers","source":"a859f51995c168a0.json","type":"application/json","size":1143},{"uid":"4c5ae357c354f545","name":"Response Body","source":"4c5ae357c354f545.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"pid-2434-worker-main"},{"name":"parentSuite","value":"Schedule - Admin Automated"},{"name":"suite","value":"Admin"},{"name":"subSuite","value":"Products > Create Product"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/products"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"ccb686fef8c2a05f","reportUrl":"https://assurdly.github.io/Schedule_admin_api/7//#testresult/ccb686fef8c2a05f","status":"failed","statusDetails":"JSONError","time":{"start":1747331856835,"stop":1747331856996,"duration":161}},{"uid":"76f830359034210c","reportUrl":"https://assurdly.github.io/Schedule_admin_api/6//#testresult/76f830359034210c","status":"failed","statusDetails":"JSONError","time":{"start":1747331190359,"stop":1747331191515,"duration":1156}}]},"tags":[]},"source":"d87d718948fe68.json","parameterValues":["POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/products","401"]}