{"uid":"cea9c38e83a77fc1","name":"Create Product - Empty required  field","fullName":"Schedule - Admin Automated/Admin/Products/Create Product#Create Product - Empty required  field","historyId":"6dac50b464110265c4a1f783cfe47c16:3e5f50c36efa326f440dc94b20ab9528","time":{"start":1747331900424,"stop":1747331900551,"duration":127},"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747331900549,"stop":1747331900549,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:41)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response returns valid message","time":{"start":1747331900550,"stop":1747331900550,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Description cannot be empty'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Description cannot be empty'\n   at Object.eval sandbox-script.js:2:41)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d9ca8803ec4b7bc1","name":"TestScript","source":"d9ca8803ec4b7bc1.txt","type":"text/plain","size":261},{"uid":"e44bd370f5307f15","name":"Request Headers","source":"e44bd370f5307f15.json","type":"application/json","size":356},{"uid":"906f592e5de8c10e","name":"Request Body","source":"906f592e5de8c10e.txt","type":"text/plain","size":165},{"uid":"b7b73521005e448","name":"Response Headers","source":"b7b73521005e448.json","type":"application/json","size":1143},{"uid":"c23357b062d85519","name":"Response Body","source":"c23357b062d85519.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"pid-2434-worker-main"},{"name":"parentSuite","value":"Schedule - Admin Automated"},{"name":"suite","value":"Admin"},{"name":"subSuite","value":"Products > Create Product"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/products"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"ba13815ccabe108e","reportUrl":"https://assurdly.github.io/Schedule_admin_api/7//#testresult/ba13815ccabe108e","status":"failed","statusDetails":"JSONError","time":{"start":1747331856998,"stop":1747331858193,"duration":1195}},{"uid":"260042aeb61a50c3","reportUrl":"https://assurdly.github.io/Schedule_admin_api/6//#testresult/260042aeb61a50c3","status":"failed","statusDetails":"JSONError","time":{"start":1747331191518,"stop":1747331193688,"duration":2170}}]},"tags":[]},"source":"cea9c38e83a77fc1.json","parameterValues":["POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/products","401"]}