{"uid":"585cdda261ae25e9","name":"Create Product Group -Empty Description Field","fullName":"Schedule - Admin Automated/Admin/Product Groups/Create Product Group#Create Product Group -Empty Description Field","historyId":"252f02715f9b48bb618ea9762ddfff9b:ac2a36eeac7e0272f907fcb8abc42e3c","time":{"start":1747331897686,"stop":1747331897832,"duration":146},"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747331897829,"stop":1747331897829,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:22)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response returns valid message","time":{"start":1747331897829,"stop":1747331897829,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Description cannot be empty'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Description cannot be empty'\n   at Object.eval sandbox-script.js:2:22)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a04b992983c352e1","name":"TestScript","source":"a04b992983c352e1.txt","type":"text/plain","size":263},{"uid":"febbe36718e10b3b","name":"Request Headers","source":"febbe36718e10b3b.json","type":"application/json","size":356},{"uid":"dd5cacca629d8fcd","name":"Request Body","source":"dd5cacca629d8fcd.txt","type":"text/plain","size":226},{"uid":"e77757aa6862ac6","name":"Response Headers","source":"e77757aa6862ac6.json","type":"application/json","size":1143},{"uid":"de7cdf39f8f156ed","name":"Response Body","source":"de7cdf39f8f156ed.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"pid-2434-worker-main"},{"name":"parentSuite","value":"Schedule - Admin Automated"},{"name":"suite","value":"Admin"},{"name":"subSuite","value":"Product Groups > Create Product Group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/product-groups"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"d189fedb6aaf82cc","reportUrl":"https://assurdly.github.io/Schedule_admin_api/7//#testresult/d189fedb6aaf82cc","status":"failed","statusDetails":"JSONError","time":{"start":1747331841318,"stop":1747331841479,"duration":161}},{"uid":"6f11607bfbb144c9","reportUrl":"https://assurdly.github.io/Schedule_admin_api/6//#testresult/6f11607bfbb144c9","status":"failed","statusDetails":"JSONError","time":{"start":1747331170760,"stop":1747331170853,"duration":93}}]},"tags":[]},"source":"585cdda261ae25e9.json","parameterValues":["POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/product-groups","401"]}