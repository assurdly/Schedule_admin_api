{"uid":"49b0e0f6c698f553","name":"Create Product Group - Invalid Category ID","fullName":"Schedule - Admin Automated/Admin/Product Groups/Create Product Group#Create Product Group - Invalid Category ID","historyId":"a08c022b12a360fbc2944cab0b59a3b8:ac2a36eeac7e0272f907fcb8abc42e3c","time":{"start":1747331897968,"stop":1747331898095,"duration":127},"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747331898093,"stop":1747331898093,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:24)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response returns valid message","time":{"start":1747331898094,"stop":1747331898094,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Category does not exists or is inacti…'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Category does not exists or is inacti…'\n   at Object.eval sandbox-script.js:2:24)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"f6f862d32aa716fb","name":"TestScript","source":"f6f862d32aa716fb.txt","type":"text/plain","size":275},{"uid":"42f56540acbf09c1","name":"Request Headers","source":"42f56540acbf09c1.json","type":"application/json","size":356},{"uid":"20b356a34fa29dd2","name":"Request Body","source":"20b356a34fa29dd2.txt","type":"text/plain","size":215},{"uid":"311e403f63879b6f","name":"Response Headers","source":"311e403f63879b6f.json","type":"application/json","size":1143},{"uid":"a26ec8129c764935","name":"Response Body","source":"a26ec8129c764935.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"pid-2434-worker-main"},{"name":"parentSuite","value":"Schedule - Admin Automated"},{"name":"suite","value":"Admin"},{"name":"subSuite","value":"Product Groups > Create Product Group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/product-groups"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"dc12e9fb7241e272","reportUrl":"https://assurdly.github.io/Schedule_admin_api/7//#testresult/dc12e9fb7241e272","status":"failed","statusDetails":"JSONError","time":{"start":1747331841650,"stop":1747331841812,"duration":162}},{"uid":"d97904c83e4df2b3","reportUrl":"https://assurdly.github.io/Schedule_admin_api/6//#testresult/d97904c83e4df2b3","status":"failed","statusDetails":"JSONError","time":{"start":1747331173047,"stop":1747331173138,"duration":91}}]},"tags":[]},"source":"49b0e0f6c698f553.json","parameterValues":["POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/product-groups","401"]}