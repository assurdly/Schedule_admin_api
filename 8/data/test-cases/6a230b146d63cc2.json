{"uid":"6a230b146d63cc2","name":"Create Product Group -Empty Name Field","fullName":"Schedule - Admin Automated/Admin/Product Groups/Create Product Group#Create Product Group -Empty Name Field","historyId":"e9033b17a3f0213c01860932d21ff846:ac2a36eeac7e0272f907fcb8abc42e3c","time":{"start":1747331897509,"stop":1747331897683,"duration":174},"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response returns valid message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747331897679,"stop":1747331897679,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:21)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response returns valid message","time":{"start":1747331897680,"stop":1747331897680,"duration":0},"status":"failed","statusMessage":"expected 'Unauthorized' to deeply equal 'Name cannot be empty'","statusTrace":"AssertionError: expected 'Unauthorized' to deeply equal 'Name cannot be empty'\n   at Object.eval sandbox-script.js:2:21)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c8fae380ece7b121","name":"TestScript","source":"c8fae380ece7b121.txt","type":"text/plain","size":256},{"uid":"33e5e67fd23b9129","name":"Request Headers","source":"33e5e67fd23b9129.json","type":"application/json","size":356},{"uid":"c088e971f8a11315","name":"Request Body","source":"c088e971f8a11315.txt","type":"text/plain","size":268},{"uid":"e3a701239950e439","name":"Response Headers","source":"e3a701239950e439.json","type":"application/json","size":1143},{"uid":"b072f05bde3dff52","name":"Response Body","source":"b072f05bde3dff52.txt","type":"text/plain","size":53}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"pid-2434-worker-main"},{"name":"parentSuite","value":"Schedule - Admin Automated"},{"name":"suite","value":"Admin"},{"name":"subSuite","value":"Product Groups > Create Product Group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/product-groups"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"1c24703714e8bef3","reportUrl":"https://assurdly.github.io/Schedule_admin_api/7//#testresult/1c24703714e8bef3","status":"failed","statusDetails":"JSONError","time":{"start":1747331838055,"stop":1747331841315,"duration":3260}},{"uid":"e0122952d8ebe3f9","reportUrl":"https://assurdly.github.io/Schedule_admin_api/6//#testresult/e0122952d8ebe3f9","status":"failed","statusDetails":"JSONError","time":{"start":1747331170664,"stop":1747331170757,"duration":93}}]},"tags":[]},"source":"6a230b146d63cc2.json","parameterValues":["POST - https://api-pwaschedule.bits.dev.onepipe.io/v1/admin/product-groups","401"]}